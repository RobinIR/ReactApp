{"ast":null,"code":"var _jsxFileName = \"E:\\\\web programming\\\\react-demo\\\\src\\\\components\\\\node.components.jsx\";\nimport React, { Fragment } from 'react';\nimport ReactFlow, { Background, Controls, MiniMap } from 'react-flow-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialElements = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'Node'\n  },\n  position: {\n    x: 0,\n    y: 0\n  }\n}];\n\nconst MindNode = () => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      elements: initialElements,\n      style: {\n        width: '100%',\n        height: '90vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#0000\",\n        gap: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {\n        nodeColor: n => {\n          if (n.type === 'input') return 'blue';\n          return '#FFCC00';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"Add node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MindNode;\nexport default MindNode;\n\nvar _c;\n\n$RefreshReg$(_c, \"MindNode\");","map":{"version":3,"sources":["E:/web programming/react-demo/src/components/node.components.jsx"],"names":["React","Fragment","ReactFlow","Background","Controls","MiniMap","initialElements","id","type","data","label","position","x","y","MindNode","width","height","n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,IAAoBC,UAApB,EAAgCC,QAAhC,EAA0CC,OAA1C,QAAyD,qBAAzD;;AACA,MAAMC,eAAe,GAAG,CACpB;AAAEC,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE,OAAjB;AAA0BC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAhC;AAAmDC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX;AAA7D,CADoB,CAAxB;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACnB,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,SAAD;AACI,MAAA,QAAQ,EAAER,eADd;AAEI,MAAA,KAAK,EAAE;AAAES,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAFX;AAAA,8BAII,QAAC,UAAD;AAAY,QAAA,KAAK,EAAC,OAAlB;AAA0B,QAAA,GAAG,EAAE;AAA/B;AAAA;AAAA;AAAA;AAAA,cAJJ,eAMI,QAAC,OAAD;AACI,QAAA,SAAS,EAAEC,CAAC,IAAI;AACZ,cAAIA,CAAC,CAACT,IAAF,KAAW,OAAf,EAAwB,OAAO,MAAP;AAExB,iBAAO,SAAP;AACH;AALL;AAAA;AAAA;AAAA;AAAA,cANJ,eAYI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAiBI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAzBD;;KAAMM,Q;AA0BN,eAAeA,QAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport ReactFlow, { Background, Controls, MiniMap } from 'react-flow-renderer';\r\nconst initialElements = [\r\n    { id: '1', type: 'input', data: { label: 'Node' }, position: { x: 0, y: 0 } }\r\n]\r\nconst MindNode = () => {\r\n    return (\r\n        <Fragment>\r\n            <ReactFlow\r\n                elements={initialElements}\r\n                style={{ width: '100%', height: '90vh' }}\r\n            >\r\n                <Background color=\"#0000\" gap={16}\r\n                />\r\n                <MiniMap\r\n                    nodeColor={n => {\r\n                        if (n.type === 'input') return 'blue';\r\n\r\n                        return '#FFCC00'\r\n                    }} />\r\n                <Controls />\r\n\r\n\r\n            </ReactFlow>\r\n            <div>\r\n                <input type=\"text\" name=\"title\" />\r\n                <button type=\"button\">Add node</button>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default MindNode;"]},"metadata":{},"sourceType":"module"}